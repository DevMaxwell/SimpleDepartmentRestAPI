server.port=8084

trace=true

spring.datasource.url=jdbc:mysql://127.0.0.1:3306/springDept
spring.datasource.username=root
spring.datasource.password=dbpass123
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

#spring.h2.console.enabled=true
#spring.datasource.url=
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.password=password
#spring.jps.database-platform=org.hibernate.dialect.H2Dialect

# logging.level.org.springframework.boot.test.context.SpringBootTestContextBootstrapper: WARN
# logging.level.org.springframework.test.context.support.AbstractContextLoader: WARN
# logging.level.org.springframework.test.context.support.AnnotationConfigContextLoaderUtils: WARN

## HOW TO ADD CONFIG TO PROPERTY FILE AND ACCESS IN YOUR PROGRAM
# Create a random config with the dot(.) syled naming of key and value pair
# welcome.message = Welcome to Our Program
# Go to the controller to access the property file
# And declare variable to store property value in
# @Annotate with @Value("${welcome.message}")
# the value passed in the @Value annotation is the key of config
# reference variable in your program

## How to add multiple profiles to your property file and specify diff config
# separate the yaml file with a '---'
# add a profile key indented under spring and add value for keys
# you can specify which profile is active above by add a '---' above all inputs
# and specify spring-profile-active: value

## How to build a ja file
# go to terminal
# run
# mvn clean install

# to run jar
# java -jar jar-file-name.jar --spring.profiles.active=test
# we used the --spring to choose a profile to run with and ovveride active profile in build